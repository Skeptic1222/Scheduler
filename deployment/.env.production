# Hospital Scheduler - Production Environment Configuration for Windows IIS
# Copy this file to .env in your production deployment and update the values

# =============================================================================
# Database Configuration (SQL Server Express)
# =============================================================================

# Database type - set to 'sqlserver' for Windows deployment
DB_TYPE=sqlserver

# SQL Server Express connection settings
DB_HOST=localhost
DB_PORT=1433
DB_NAME=HospitalScheduler

# Database Authentication Configuration
# Choose ONE authentication method:

# OPTION 1: SQL Server Authentication (RECOMMENDED for production)
DB_WINDOWS_AUTH=false
DB_USER=HospitalSchedulerApp
DB_PASSWORD=your-secure-database-password-here

# OPTION 2: Windows Authentication (uncomment to use)
# DB_WINDOWS_AUTH=true
# DB_USER=DOMAIN\ServiceAccount  # Format: DOMAIN\User (required for NTLM)
# DB_PASSWORD=service-account-password  # Required for NTLM authentication

# SSL/TLS settings for SQL Server
DB_SSL=false
DB_TRUST_SERVER_CERTIFICATE=true

# =============================================================================
# Application Configuration
# =============================================================================

# Environment
NODE_ENV=production

# Server settings
PORT=5000
BASE_URL=http://localhost

# CORS configuration for your domain
CORS_ORIGIN=http://localhost

# =============================================================================
# Security Configuration
# =============================================================================

# Session secret (IMPORTANT: Change this in production!)
# Generate a secure random string: openssl rand -base64 32
SESSION_SECRET=your-secure-session-secret-change-this-in-production

# Additional security settings
ENABLE_RATE_LIMITING=true
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# =============================================================================
# Features Configuration
# =============================================================================

# WebSocket support for real-time updates
ENABLE_WEBSOCKET=true

# OAuth authentication (if needed)
ENABLE_OAUTH=false

# Audit logging
ENABLE_AUDIT_LOGGING=true

# =============================================================================
# Logging Configuration
# =============================================================================

# Log level (error, warn, info, debug)
LOG_LEVEL=info

# Log file path (relative to application root)
LOG_FILE=logs/hospital-scheduler.log

# =============================================================================
# Performance Configuration
# =============================================================================

# Database connection pool settings
DB_POOL_MIN=2
DB_POOL_MAX=10
DB_POOL_ACQUIRE_TIMEOUT=60000
DB_POOL_IDLE_TIMEOUT=10000

# Request timeout (milliseconds)
REQUEST_TIMEOUT=30000

# =============================================================================
# Windows/IIS Specific Settings
# =============================================================================

# IIS integration settings
IIS_NODE_ENV=production
IIS_NODE_LOGGING_ENABLED=false
IIS_NODE_DEV_ERRORS_ENABLED=false

# Named pipe configuration for IIS
IISNODE_MAX_CONCURRENT_REQUESTS=1024
IISNODE_MAX_NAMED_PIPE_CONNECTION_POOL_SIZE=512

# =============================================================================
# Claude Code / AI Assistant Configuration
# =============================================================================

# Enable Claude Code integration for troubleshooting (optional)
CLAUDE_CODE_ENABLED=true
CLAUDE_CODE_LOG_LEVEL=info

# =============================================================================
# Monitoring and Health Checks
# =============================================================================

# Health check endpoint
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_PATH=/health

# Metrics collection
METRICS_ENABLED=true

# Database health check timeout
DB_HEALTH_CHECK_TIMEOUT=5000

# =============================================================================
# Backup and Maintenance
# =============================================================================

# Automatic backup configuration (if implemented)
AUTO_BACKUP_ENABLED=false
BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM
BACKUP_RETENTION_DAYS=7

# =============================================================================
# Development Helpers (remove in production)
# =============================================================================

# Enable debugging features (set to false in production)
DEBUG_MODE=false
VERBOSE_LOGGING=false

# =============================================================================
# Deployment Information
# =============================================================================

# Deployment version and build info
DEPLOYMENT_VERSION=1.0.0
BUILD_DATE=2025-01-01
DEPLOYED_BY=Claude-Code

# =============================================================================
# IMPORTANT NOTES FOR WINDOWS DEPLOYMENT
# =============================================================================
#
# 1. SQL Server Express Setup:
#    - Install SQL Server Express with Mixed Mode Authentication
#    - Enable TCP/IP protocol in SQL Server Configuration Manager
#    - Ensure SQL Server Browser service is running if using named instances
#    - Run database/create-sqlserver-schema.sql to create the database
#
# 2. IIS Configuration:
#    - Install URL Rewrite Module: https://www.iis.net/downloads/microsoft/url-rewrite
#    - Install iisnode: https://github.com/Azure/iisnode
#    - Configure Application Pool for .NET Framework v4.0, Integrated Pipeline
#    - Set Application Pool identity to ApplicationPoolIdentity or a service account
#
# 3. File Permissions:
#    - Give IIS_IUSRS read/execute permissions to application directory
#    - Give Application Pool identity permissions to SQL Server if using Windows Auth
#
# 4. Firewall:
#    - Open port 1433 for SQL Server Express (if remote connections needed)
#    - Open port 80/443 for web traffic
#
# 5. Windows Services:
#    - Ensure SQL Server (SQLEXPRESS) service is running
#    - Ensure World Wide Web Publishing Service is running
#
# 6. Troubleshooting:
#    - Check IIS logs at: C:\inetpub\logs\LogFiles\W3SVC1\
#    - Check iisnode logs at: C:\inetpub\wwwroot\scheduler\iisnode\
#    - Check SQL Server logs in SQL Server Management Studio
#
# 7. Claude Code Integration:
#    - If Claude Code is running in WSL, ensure proper file system mounting
#    - Use \\wsl$\Ubuntu\path\to\project for accessing files from Windows
#    - Consider running development commands from WSL bash
#
# =============================================================================